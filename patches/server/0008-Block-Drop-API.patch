From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: DaRacci <racci@racci.dev>
Date: Fri, 18 Nov 2022 21:40:34 +1100
Subject: [PATCH] Block Drop API


diff --git a/src/main/java/net/minecraft/server/level/ServerPlayer.java b/src/main/java/net/minecraft/server/level/ServerPlayer.java
index 566e09146a76f194f838754613703d5dad574943..86deab6e30278bf2e8a7939505b64b782c475223 100644
--- a/src/main/java/net/minecraft/server/level/ServerPlayer.java
+++ b/src/main/java/net/minecraft/server/level/ServerPlayer.java
@@ -271,6 +271,7 @@ public class ServerPlayer extends Player {
     public double lastEntitySpawnRadiusSquared; // Paper - optimise isOutsideRange, this field is in blocks
     public final com.destroystokyo.paper.util.misc.PooledLinkedHashSets.PooledObjectLinkedOpenHashSet<ServerPlayer> cachedSingleHashSet; // Paper
     public org.bukkit.event.player.PlayerQuitEvent.QuitReason quitReason = null; // Paper - there are a lot of changes to do if we change all methods leading to the event
+    private final java.util.HashMap<BlockState, it.unimi.dsi.fastutil.Pair<Boolean, Boolean>> blockDropCache = new java.util.HashMap<>(); // Tentacles - Block Drop cache, reset each tick.
 
     public ServerPlayer(MinecraftServer server, ServerLevel world, GameProfile profile, @Nullable ProfilePublicKey publicKey) {
         super(world, world.getSharedSpawnPos(), world.getSharedSpawnAngle(), profile, publicKey);
@@ -641,6 +642,7 @@ public class ServerPlayer extends Player {
 
     @Override
     public void tick() {
+        blockDropCache.clear(); // Tentacles
         // CraftBukkit start
         if (this.joining) {
             this.joining = false;
@@ -2690,5 +2692,23 @@ public class ServerPlayer extends Player {
 
         return it.unimi.dsi.fastutil.Pair.of(finalDestroySpeed.get(), baseSpeed != finalDestroySpeed.get());
     }
+
+    @Override
+    public boolean hasCorrectToolForDrops(BlockState state) {
+        return this.hasCorrectToolForDropsPair(state).left();
+    }
+
+    public it.unimi.dsi.fastutil.Pair<Boolean, Boolean> hasCorrectToolForDropsPair(BlockState state) {
+        return blockDropCache.computeIfAbsent(state, s -> {
+            final boolean defaultResult = super.hasCorrectToolForDrops(s);
+            final var bukkitItem = this.getInventory().getSelected().asBukkitCopy();
+            final var bukkitState = org.bukkit.craftbukkit.block.CraftBlockStates.getBlockState(s, null);
+            final var bukkitPlayer = (org.bukkit.entity.Player) this.getBukkitEntity();
+            return dev.racci.tentacles.Tentacles.getGlobalBlockDropCondition().values().stream()
+                .map(condition -> condition.test(bukkitPlayer, bukkitState, bukkitItem))
+                .filter(Objects::nonNull)
+                .findFirst().map(result -> it.unimi.dsi.fastutil.Pair.of(result, result != defaultResult)).orElseGet(() -> it.unimi.dsi.fastutil.Pair.of(defaultResult, false));
+        });
+    }
     // Tentacles end
 }
diff --git a/src/main/java/net/minecraft/world/level/block/state/BlockBehaviour.java b/src/main/java/net/minecraft/world/level/block/state/BlockBehaviour.java
index f0930b0d8dae2844bfc934d8e82981ce33256c41..8d9ff0a346ba8516780e16c7ad12a2afc2b83625 100644
--- a/src/main/java/net/minecraft/world/level/block/state/BlockBehaviour.java
+++ b/src/main/java/net/minecraft/world/level/block/state/BlockBehaviour.java
@@ -899,7 +899,10 @@ public abstract class BlockBehaviour {
 
             if (player instanceof net.minecraft.server.level.ServerPlayer serverPlayer) {
                 final var speedPair = serverPlayer.getDestroySpeedPair(state);
-                final float toolModifier = player.hasCorrectToolForDrops(state) ? 30F : 100F;
+                // Tentacles start - Block Drop API
+                final var dropModifier = serverPlayer.hasCorrectToolForDropsPair(state);
+                final float toolModifier = !dropModifier.right() && dropModifier.left() ? 30F : 100F;
+                // Tentacles end
 
                 var speed = speedPair.left() / f / toolModifier;
                 // For some reason when there is a modifier enabled, and a tool has > 1 speed,
